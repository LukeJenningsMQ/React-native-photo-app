{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { PermissionStatus, createPermissionHook, UnavailabilityError, CodedError } from 'expo-modules-core';\nimport ExponentImagePicker from \"./ExponentImagePicker\";\nimport { MediaTypeOptions, VideoExportPreset, UIImagePickerControllerQualityType, UIImagePickerPresentationStyle } from \"./ImagePicker.types\";\nfunction validateOptions(options) {\n  var aspect = options.aspect,\n    quality = options.quality,\n    videoMaxDuration = options.videoMaxDuration;\n  if (aspect != null) {\n    var _aspect = _slicedToArray(aspect, 2),\n      x = _aspect[0],\n      y = _aspect[1];\n    if (x <= 0 || y <= 0) {\n      throw new CodedError('ERR_INVALID_ARGUMENT', \"Invalid aspect ratio values \" + x + \":\" + y + \". Provide positive numbers.\");\n    }\n  }\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError('ERR_INVALID_ARGUMENT', \"Invalid 'quality' value \" + quality + \". Provide a value between 0 and 1.\");\n  }\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError('ERR_INVALID_ARGUMENT', \"Invalid 'videoMaxDuration' value \" + videoMaxDuration + \". Provide a non-negative number.\");\n  }\n  return options;\n}\nexport function getCameraPermissionsAsync() {\n  return _getCameraPermissionsAsync.apply(this, arguments);\n}\nfunction _getCameraPermissionsAsync() {\n  _getCameraPermissionsAsync = _asyncToGenerator(function* () {\n    return ExponentImagePicker.getCameraPermissionsAsync();\n  });\n  return _getCameraPermissionsAsync.apply(this, arguments);\n}\nexport function getCameraRollPermissionsAsync() {\n  return _getCameraRollPermissionsAsync.apply(this, arguments);\n}\nfunction _getCameraRollPermissionsAsync() {\n  _getCameraRollPermissionsAsync = _asyncToGenerator(function* () {\n    console.warn('ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()');\n    return getMediaLibraryPermissionsAsync();\n  });\n  return _getCameraRollPermissionsAsync.apply(this, arguments);\n}\nexport function getMediaLibraryPermissionsAsync() {\n  return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nfunction _getMediaLibraryPermissionsAsync() {\n  _getMediaLibraryPermissionsAsync = _asyncToGenerator(function* () {\n    var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var imagePickerMethod = ExponentImagePicker.getMediaLibraryPermissionsAsync;\n    return imagePickerMethod(writeOnly);\n  });\n  return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nexport function requestCameraPermissionsAsync() {\n  return _requestCameraPermissionsAsync.apply(this, arguments);\n}\nfunction _requestCameraPermissionsAsync() {\n  _requestCameraPermissionsAsync = _asyncToGenerator(function* () {\n    return ExponentImagePicker.requestCameraPermissionsAsync();\n  });\n  return _requestCameraPermissionsAsync.apply(this, arguments);\n}\nexport function requestCameraRollPermissionsAsync() {\n  return _requestCameraRollPermissionsAsync.apply(this, arguments);\n}\nfunction _requestCameraRollPermissionsAsync() {\n  _requestCameraRollPermissionsAsync = _asyncToGenerator(function* () {\n    console.warn('ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()');\n    return requestMediaLibraryPermissionsAsync();\n  });\n  return _requestCameraRollPermissionsAsync.apply(this, arguments);\n}\nexport function requestMediaLibraryPermissionsAsync() {\n  return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nfunction _requestMediaLibraryPermissionsAsync() {\n  _requestMediaLibraryPermissionsAsync = _asyncToGenerator(function* () {\n    var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n    return imagePickerMethod(writeOnly);\n  });\n  return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nexport var useMediaLibraryPermissions = createPermissionHook({\n  getMethod: function getMethod(options) {\n    return getMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  },\n  requestMethod: function requestMethod(options) {\n    return requestMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  }\n});\nexport var useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync\n});\nexport function getPendingResultAsync() {\n  return _getPendingResultAsync.apply(this, arguments);\n}\nfunction _getPendingResultAsync() {\n  _getPendingResultAsync = _asyncToGenerator(function* () {\n    if (ExponentImagePicker.getPendingResultAsync) {\n      return ExponentImagePicker.getPendingResultAsync();\n    }\n    return [];\n  });\n  return _getPendingResultAsync.apply(this, arguments);\n}\nexport function launchCameraAsync() {\n  return _launchCameraAsync.apply(this, arguments);\n}\nfunction _launchCameraAsync() {\n  _launchCameraAsync = _asyncToGenerator(function* () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!ExponentImagePicker.launchCameraAsync) {\n      throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n    }\n    return yield ExponentImagePicker.launchCameraAsync(validateOptions(options));\n  });\n  return _launchCameraAsync.apply(this, arguments);\n}\nexport function launchImageLibraryAsync(_x) {\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\nfunction _launchImageLibraryAsync() {\n  _launchImageLibraryAsync = _asyncToGenerator(function* (options) {\n    if (!ExponentImagePicker.launchImageLibraryAsync) {\n      throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n    }\n    return yield ExponentImagePicker.launchImageLibraryAsync(options != null ? options : {});\n  });\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\nexport { MediaTypeOptions, VideoExportPreset, PermissionStatus, UIImagePickerControllerQualityType, UIImagePickerPresentationStyle };","map":{"version":3,"names":["PermissionStatus","createPermissionHook","UnavailabilityError","CodedError","ExponentImagePicker","MediaTypeOptions","VideoExportPreset","UIImagePickerControllerQualityType","UIImagePickerPresentationStyle","validateOptions","options","aspect","quality","videoMaxDuration","_aspect","_slicedToArray","x","y","getCameraPermissionsAsync","_getCameraPermissionsAsync","apply","arguments","_asyncToGenerator","getCameraRollPermissionsAsync","_getCameraRollPermissionsAsync","console","warn","getMediaLibraryPermissionsAsync","_getMediaLibraryPermissionsAsync","writeOnly","length","undefined","imagePickerMethod","requestCameraPermissionsAsync","_requestCameraPermissionsAsync","requestCameraRollPermissionsAsync","_requestCameraRollPermissionsAsync","requestMediaLibraryPermissionsAsync","_requestMediaLibraryPermissionsAsync","useMediaLibraryPermissions","getMethod","requestMethod","useCameraPermissions","getPendingResultAsync","_getPendingResultAsync","launchCameraAsync","_launchCameraAsync","launchImageLibraryAsync","_x","_launchImageLibraryAsync"],"sources":["C:\\Users\\lukej\\Desktop\\Web2022\\poo\\AwesomeP\\node_modules\\expo-image-picker\\src\\ImagePicker.ts"],"sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  MediaTypeOptions,\n  ImagePickerOptions,\n  VideoExportPreset,\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#imagepickercamerapermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `getMediaLibraryPermissionsAsync()` instead.\n */\nexport async function getCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()'\n  );\n  return getMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#imagepickercamerarollpermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.getMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#imagepickercamerapermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `requestMediaLibraryPermissionsAsync()` instead.\n */\nexport async function requestCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()'\n  );\n  return requestMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#imagepickercamerarollpermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will bloc\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n * **Animated GIFs support** If the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is set to `undefined` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG, on iOS — GIF).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchImageLibraryAsync<T extends ImagePickerOptions>(\n  options?: T\n): Promise<ExpandImagePickerResult<T>> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\n\nexport {\n  MediaTypeOptions,\n  ImagePickerOptions,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  VideoExportPreset,\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  ExpandImagePickerResult,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}