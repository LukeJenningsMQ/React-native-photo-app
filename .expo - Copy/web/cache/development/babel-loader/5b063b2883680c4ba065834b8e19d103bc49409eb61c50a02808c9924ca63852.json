{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from 'react';\nimport AppColours from \"../configs/AppColours\";\nimport AppButton from \"../components/AppButton\";\nimport AppScreen from \"../components/AppScreen\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppText from \"../components/AppText\";\nimport { useNavigation } from '@react-navigation/native';\nimport DataManager from \"../configs/DataManager\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar schema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).max(8).label(\"Password\")\n});\nvar validateUser = function validateUser(_ref) {\n  var email = _ref.email,\n    password = _ref.password;\n  var commonData = DataManager.getInstance();\n  var list = commonData.getAllUsers();\n  return list.filter(function (user) {\n    return user.email === email && user.password === password;\n  }).length > 0;\n};\nvar getUser = function getUser(_ref2) {\n  var email = _ref2.email;\n  var commonData = DataManager.getInstance();\n  var list = commonData.getAllUsers();\n  return list.find(function (user) {\n    return user.email === email;\n  });\n};\nvar createUser = function createUser(_ref3) {\n  var email = _ref3.email;\n  var commonData = DataManager.getInstance();\n  var userID = getUser({\n    email: email\n  }).id;\n  commonData.setUserID(userID);\n};\nfunction LogInScreen(_ref4) {\n  var navigation = _ref4.navigation;\n  return _jsxs(AppScreen, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.Image,\n      children: _jsx(Image, {\n        style: styles.logo,\n        source: require(\"../assets/Photos/Logo.png\")\n      })\n    }), _jsx(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      onSubmit: function onSubmit(values, _ref5) {\n        var resetForm = _ref5.resetForm;\n        if (validateUser(values)) {\n          console.log(values);\n          createUser(values);\n          resetForm();\n          navigation.navigate(\"Home\");\n        } else {\n          resetForm();\n          alert(\"Invalid Login Details\");\n        }\n      },\n      validationSchema: schema,\n      children: function children(_ref6) {\n        var values = _ref6.values,\n          handleChange = _ref6.handleChange,\n          handleSubmit = _ref6.handleSubmit,\n          errors = _ref6.errors,\n          setFieldTouched = _ref6.setFieldTouched,\n          touched = _ref6.touched;\n        return _jsx(_Fragment, {\n          children: _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(AppTextInput, {\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              icon: \"email\",\n              placeholder: \"Email Address\",\n              keyboardType: \"email-address\",\n              textContentType: \"emailAddress\",\n              value: values.email,\n              onBlur: function onBlur() {\n                return setFieldTouched;\n              },\n              onChangeText: handleChange(\"email\")\n            }), touched.email && _jsx(AppText, {\n              style: {\n                color: '#FF0000',\n                fontSize: 15\n              },\n              children: errors.email\n            }), _jsx(AppTextInput, {\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              icon: \"lock\",\n              placeholder: \"Password\",\n              secureTextEntry: true,\n              textContentType: \"password\",\n              value: values.password,\n              onBlur: function onBlur() {\n                return setFieldTouched;\n              },\n              onChangeText: handleChange(\"password\")\n            }), touched.password && _jsx(AppText, {\n              style: {\n                color: '#FF0000',\n                fontSize: 15\n              },\n              children: errors.password\n            }), _jsx(AppButton, {\n              title: \"Login\",\n              onPress: handleSubmit\n            })]\n          })\n        });\n      }\n    }), _jsx(AppButton, {\n      title: \"back\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Welcome\");\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: AppColours.primaryColour,\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 40,\n    color: 'red',\n    fontWeight: 'bold',\n    fontStyle: 'italic'\n  },\n  logo: {\n    height: 255,\n    width: 220,\n    marginTop: 20,\n    marginBottom: 25,\n    alignSelf: 'center'\n  },\n  image: {}\n});\nexport default LogInScreen;","map":{"version":3,"names":["React","AppColours","AppButton","AppScreen","AppTextInput","AppText","useNavigation","DataManager","Formik","Yup","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","schema","object","shape","email","string","required","label","password","min","max","validateUser","_ref","commonData","getInstance","list","getAllUsers","filter","user","length","getUser","_ref2","find","createUser","_ref3","userID","id","setUserID","LogInScreen","_ref4","navigation","style","styles","container","children","View","Image","logo","source","require","initialValues","onSubmit","values","_ref5","resetForm","console","log","navigate","alert","validationSchema","_ref6","handleChange","handleSubmit","errors","setFieldTouched","touched","autoCapitalize","autoCorrect","icon","placeholder","keyboardType","textContentType","value","onBlur","onChangeText","color","fontSize","secureTextEntry","title","onPress","StyleSheet","create","flex","backgroundColor","primaryColour","alignItems","text","fontWeight","fontStyle","height","width","marginTop","marginBottom","alignSelf","image"],"sources":["C:/Users/lukej/Desktop/Web2022/poo/AwesomeP/app/Screens/LogInScreen.js"],"sourcesContent":["import {Text, View, StyleSheet, Image} from 'react-native';\r\nimport React from 'react'\r\n\r\nimport AppColours from '../configs/AppColours';\r\nimport AppButton from '../components/AppButton';\r\nimport AppScreen from '../components/AppScreen';\r\nimport AppTextInput from '../components/AppTextInput';\r\nimport AppText from '../components/AppText';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport DataManager from '../configs/DataManager';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst schema = Yup.object().shape(\r\n  {\r\n    email: Yup.string().required().email().label(\"Email\"),\r\n    password: Yup.string().required().min(4).max(8).label(\"Password\"),\r\n  }\r\n);\r\n\r\n\r\nconst validateUser = ({email,password}) => {\r\n  let commonData = DataManager.getInstance();\r\n  let list = commonData.getAllUsers();\r\n  return(\r\n    list.filter((user) => user.email === email && user.password === password).length > 0\r\n  );\r\n};\r\n\r\nconst getUser = ({email}) => {\r\n  let commonData = DataManager.getInstance();\r\n  let list = commonData.getAllUsers();\r\n  return list.find((user) => user.email === email)\r\n}\r\n\r\nconst createUser = ({email}) => {\r\n  let commonData = DataManager.getInstance();\r\n  let userID = getUser({email}).id;\r\n  commonData.setUserID(userID);\r\n}\r\n\r\nfunction LogInScreen({navigation}) {\r\n  return (\r\n    <AppScreen style={styles.container}>\r\n      <View style={styles.Image}>\r\n      <Image style={styles.logo} source={require('../assets/Photos/Logo.png')}/>\r\n      </View>\r\n      <Formik\r\n        initialValues={{email:'',password:'',}}\r\n        onSubmit = {(values, {resetForm})=> {\r\n          if(validateUser(values)){\r\n            console.log(values);\r\n            createUser(values);\r\n            resetForm();\r\n            navigation.navigate(\"Home\")\r\n          }\r\n          else {\r\n            resetForm();\r\n            alert(\"Invalid Login Details\")\r\n          }\r\n            \r\n        }}\r\n        validationSchema ={schema}>\r\n        {({values,handleChange, handleSubmit,errors,setFieldTouched,touched})=>(\r\n\r\n          <>\r\n            <View style={styles.container}>\r\n            <AppTextInput \r\n            autoCapitalize='none'\r\n            autoCorrect={false}\r\n            icon='email' \r\n            placeholder='Email Address'\r\n            keyboardType='email-address'\r\n            textContentType='emailAddress'\r\n            value = {values.email}\r\n            onBlur={()=>setFieldTouched}\r\n            onChangeText={handleChange(\"email\")}\r\n            />\r\n          {touched.email && <AppText style={{color:'#FF0000', fontSize:15}}>{errors.email}</AppText>}\r\n          <AppTextInput \r\n          autoCapitalize='none'\r\n          autoCorrect={false}\r\n          icon='lock' \r\n          placeholder='Password'\r\n          secureTextEntry\r\n          textContentType='password'\r\n          value = {values.password}\r\n          onBlur={()=>setFieldTouched}\r\n          onChangeText={handleChange(\"password\")}\r\n          />    \r\n          {touched.password && <AppText style={{color:'#FF0000', fontSize:15}}>{errors.password}</AppText>}\r\n          <AppButton title='Login' onPress={handleSubmit}></AppButton>\r\n          </View>\r\n        </>\r\n      )}\r\n      </Formik>\r\n      \r\n      <AppButton title='back' onPress={() => navigation.navigate(\"Welcome\")}></AppButton>\r\n    </AppScreen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: AppColours.primaryColour,\r\n        alignItems:'center',\r\n      },\r\n      text:{\r\n        fontSize: 40,\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n        fontStyle:'italic',\r\n      },\r\n      logo:{\r\n        height:255,\r\n        width: 220,\r\n        marginTop: 20,\r\n        marginBottom: 25,\r\n        alignSelf:'center'\r\n      },\r\n      image:{\r\n      }\r\n})\r\nexport default LogInScreen;"],"mappings":";;;;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU;AACjB,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,YAAY;AACnB,OAAOC,OAAO;AACd,SAAQC,aAAa,QAAO,0BAA0B;AACtD,OAAOC,WAAW;AAElB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,IAAMC,MAAM,GAAGP,GAAG,CAACQ,MAAM,EAAE,CAACC,KAAK,CAC/B;EACEC,KAAK,EAAEV,GAAG,CAACW,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACF,KAAK,EAAE,CAACG,KAAK,CAAC,OAAO,CAAC;EACrDC,QAAQ,EAAEd,GAAG,CAACW,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACG,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAACH,KAAK,CAAC,UAAU;AAClE,CAAC,CACF;AAGD,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAyB;EAAA,IAApBR,KAAK,GAAAQ,IAAA,CAALR,KAAK;IAACI,QAAQ,GAAAI,IAAA,CAARJ,QAAQ;EACnC,IAAIK,UAAU,GAAGrB,WAAW,CAACsB,WAAW,EAAE;EAC1C,IAAIC,IAAI,GAAGF,UAAU,CAACG,WAAW,EAAE;EACnC,OACED,IAAI,CAACE,MAAM,CAAC,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACd,KAAK,KAAKA,KAAK,IAAIc,IAAI,CAACV,QAAQ,KAAKA,QAAQ;EAAA,EAAC,CAACW,MAAM,GAAG,CAAC;AAExF,CAAC;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,KAAA,EAAgB;EAAA,IAAXjB,KAAK,GAAAiB,KAAA,CAALjB,KAAK;EACrB,IAAIS,UAAU,GAAGrB,WAAW,CAACsB,WAAW,EAAE;EAC1C,IAAIC,IAAI,GAAGF,UAAU,CAACG,WAAW,EAAE;EACnC,OAAOD,IAAI,CAACO,IAAI,CAAC,UAACJ,IAAI;IAAA,OAAKA,IAAI,CAACd,KAAK,KAAKA,KAAK;EAAA,EAAC;AAClD,CAAC;AAED,IAAMmB,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA,EAAgB;EAAA,IAAXpB,KAAK,GAAAoB,KAAA,CAALpB,KAAK;EACxB,IAAIS,UAAU,GAAGrB,WAAW,CAACsB,WAAW,EAAE;EAC1C,IAAIW,MAAM,GAAGL,OAAO,CAAC;IAAChB,KAAK,EAALA;EAAK,CAAC,CAAC,CAACsB,EAAE;EAChCb,UAAU,CAACc,SAAS,CAACF,MAAM,CAAC;AAC9B,CAAC;AAED,SAASG,WAAWA,CAAAC,KAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,KAAA,CAAVC,UAAU;EAC9B,OACEhC,KAAA,CAACV,SAAS;IAAC2C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GACjCtC,IAAA,CAACuC,IAAI;MAACJ,KAAK,EAAEC,MAAM,CAACI,KAAM;MAAAF,QAAA,EAC1BtC,IAAA,CAACwC,KAAK;QAACL,KAAK,EAAEC,MAAM,CAACK,IAAK;QAACC,MAAM,EAAEC,OAAO;MAA8B;IAAE,EACnE,EACP3C,IAAA,CAACH,MAAM;MACL+C,aAAa,EAAE;QAACpC,KAAK,EAAC,EAAE;QAACI,QAAQ,EAAC;MAAG,CAAE;MACvCiC,QAAQ,EAAI,SAAAA,SAACC,MAAM,EAAAC,KAAA,EAAiB;QAAA,IAAdC,SAAS,GAAAD,KAAA,CAATC,SAAS;QAC7B,IAAGjC,YAAY,CAAC+B,MAAM,CAAC,EAAC;UACtBG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;UACnBnB,UAAU,CAACmB,MAAM,CAAC;UAClBE,SAAS,EAAE;UACXd,UAAU,CAACiB,QAAQ,CAAC,MAAM,CAAC;QAC7B,CAAC,MACI;UACHH,SAAS,EAAE;UACXI,KAAK,CAAC,uBAAuB,CAAC;QAChC;MAEF,CAAE;MACFC,gBAAgB,EAAGhD,MAAO;MAAAiC,QAAA,EACzB,SAAAA,SAAAgB,KAAA;QAAA,IAAER,MAAM,GAAAQ,KAAA,CAANR,MAAM;UAACS,YAAY,GAAAD,KAAA,CAAZC,YAAY;UAAEC,YAAY,GAAAF,KAAA,CAAZE,YAAY;UAACC,MAAM,GAAAH,KAAA,CAANG,MAAM;UAACC,eAAe,GAAAJ,KAAA,CAAfI,eAAe;UAACC,OAAO,GAAAL,KAAA,CAAPK,OAAO;QAAA,OAEjE3D,IAAA,CAAAI,SAAA;UAAAkC,QAAA,EACEpC,KAAA,CAACqC,IAAI;YAACJ,KAAK,EAAEC,MAAM,CAACC,SAAU;YAAAC,QAAA,GAC9BtC,IAAA,CAACP,YAAY;cACbmE,cAAc,EAAC,MAAM;cACrBC,WAAW,EAAE,KAAM;cACnBC,IAAI,EAAC,OAAO;cACZC,WAAW,EAAC,eAAe;cAC3BC,YAAY,EAAC,eAAe;cAC5BC,eAAe,EAAC,cAAc;cAC9BC,KAAK,EAAIpB,MAAM,CAACtC,KAAM;cACtB2D,MAAM,EAAE,SAAAA,OAAA;gBAAA,OAAIT,eAAe;cAAA,CAAC;cAC5BU,YAAY,EAAEb,YAAY,CAAC,OAAO;YAAE,EAClC,EACHI,OAAO,CAACnD,KAAK,IAAIR,IAAA,CAACN,OAAO;cAACyC,KAAK,EAAE;gBAACkC,KAAK,EAAC,SAAS;gBAAEC,QAAQ,EAAC;cAAE,CAAE;cAAAhC,QAAA,EAAEmB,MAAM,CAACjD;YAAK,EAAW,EAC1FR,IAAA,CAACP,YAAY;cACbmE,cAAc,EAAC,MAAM;cACrBC,WAAW,EAAE,KAAM;cACnBC,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,UAAU;cACtBQ,eAAe;cACfN,eAAe,EAAC,UAAU;cAC1BC,KAAK,EAAIpB,MAAM,CAAClC,QAAS;cACzBuD,MAAM,EAAE,SAAAA,OAAA;gBAAA,OAAIT,eAAe;cAAA,CAAC;cAC5BU,YAAY,EAAEb,YAAY,CAAC,UAAU;YAAE,EACrC,EACDI,OAAO,CAAC/C,QAAQ,IAAIZ,IAAA,CAACN,OAAO;cAACyC,KAAK,EAAE;gBAACkC,KAAK,EAAC,SAAS;gBAAEC,QAAQ,EAAC;cAAE,CAAE;cAAAhC,QAAA,EAAEmB,MAAM,CAAC7C;YAAQ,EAAW,EAChGZ,IAAA,CAACT,SAAS;cAACiF,KAAK,EAAC,OAAO;cAACC,OAAO,EAAEjB;YAAa,EAAa;UAAA;QACrD,EACN;MAAA;IACJ,EACQ,EAETxD,IAAA,CAACT,SAAS;MAACiF,KAAK,EAAC,MAAM;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMvC,UAAU,CAACiB,QAAQ,CAAC,SAAS,CAAC;MAAA;IAAC,EAAa;EAAA,EACzE;AAEhB;AAEA,IAAMf,MAAM,GAAGsC,UAAU,CAACC,MAAM,CAAC;EAC7BtC,SAAS,EAAE;IACPuC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAEvF,UAAU,CAACwF,aAAa;IACzCC,UAAU,EAAC;EACb,CAAC;EACDC,IAAI,EAAC;IACHV,QAAQ,EAAE,EAAE;IACZD,KAAK,EAAE,KAAK;IACZY,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAC;EACZ,CAAC;EACDzC,IAAI,EAAC;IACH0C,MAAM,EAAC,GAAG;IACVC,KAAK,EAAE,GAAG;IACVC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAC;EACZ,CAAC;EACDC,KAAK,EAAC,CACN;AACN,CAAC,CAAC;AACF,eAAexD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}