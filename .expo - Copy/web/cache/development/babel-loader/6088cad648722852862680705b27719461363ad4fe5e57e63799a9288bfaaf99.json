{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"selectedItem\", \"onSelectedItem\", \"icon\", \"data\", \"placeholder\"];\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport AppColours from \"../configs/AppColours\";\nimport AppText from \"./AppText\";\nimport AppButton from \"./AppButton\";\nimport AppScreen from \"./AppScreen\";\nimport AppListItem from \"./AppListItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction AppPicker(_ref) {\n  var selectedItem = _ref.selectedItem,\n    onSelectedItem = _ref.onSelectedItem,\n    icon = _ref.icon,\n    data = _ref.data,\n    placeholder = _ref.placeholder,\n    otherProps = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [icon && _jsx(MaterialCommunityIcons, {\n          name: icon,\n          size: 22\n        }), _jsx(AppText, {\n          style: styles.textInput,\n          children: selectedItem ? selectedItem.label : placeholder\n        }), _jsx(MaterialCommunityIcons, {\n          name: \"chevron-down\",\n          size: 22\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      animationType: \"slide\",\n      children: _jsxs(AppScreen, {\n        children: [_jsx(FlatList, {\n          data: data,\n          keyExtractor: function keyExtractor(item) {\n            return item.value.toString();\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(AppListItem, {\n              onPress: function onPress() {\n                setModalVisible(false);\n                onSelectedItem(item);\n              },\n              icon: item.icon,\n              backgroundColor: AppColours.secondaryColour,\n              title: item.label\n            });\n          }\n        }), _jsx(AppButton, {\n          title: \"Close\",\n          onPress: function onPress() {\n            return setModalVisible(false);\n          }\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    borderRadius: 20,\n    padding: 5,\n    width: '80%',\n    marginTop: 5,\n    backgroundColor: '#D3D3D3'\n  },\n  textInput: {\n    flex: 1,\n    width: '100%',\n    marginLeft: 5,\n    fontSize: 20,\n    fontFamily: Platform.OS === 'android' ? 'monospace' : 'Avenir-Oblique'\n  },\n  text: {}\n});\nexport default AppPicker;","map":{"version":3,"names":["React","useState","MaterialCommunityIcons","AppColours","AppText","AppButton","AppScreen","AppListItem","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AppPicker","_ref","selectedItem","onSelectedItem","icon","data","placeholder","otherProps","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","children","TouchableWithoutFeedback","onPress","View","style","styles","container","name","size","textInput","label","Modal","visible","animationType","FlatList","keyExtractor","item","value","toString","renderItem","_ref2","backgroundColor","secondaryColour","title","StyleSheet","create","flexDirection","borderRadius","padding","width","marginTop","flex","marginLeft","fontSize","fontFamily","Platform","OS","text"],"sources":["C:/Users/lukej/Desktop/Web2022/poo/AwesomeP/app/components/AppPicker.js"],"sourcesContent":["import {FlatList, Button,Modal, TouchableWithoutFeedback, StyleSheet, Text, TextInput, View} from 'react-native';\r\nimport React, {useState} from 'react';\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons';\r\nimport AppColours from '../configs/AppColours';\r\nimport AppText from './AppText';\r\nimport AppButton from './AppButton';\r\nimport AppScreen from './AppScreen';\r\nimport AppListItem from './AppListItem';\r\n\r\nfunction AppPicker({selectedItem, onSelectedItem, icon, data, placeholder, ...otherProps}) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n    return (\r\n      <>\r\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\r\n    <View style={styles.container}>\r\n      {icon && <MaterialCommunityIcons name={icon} size={22}/>}\r\n      <AppText style={styles.textInput}>{selectedItem? selectedItem.label : placeholder}</AppText>\r\n      <MaterialCommunityIcons name='chevron-down' size={22}/>\r\n    </View>\r\n    </TouchableWithoutFeedback>\r\n    <Modal visible={modalVisible} animationType='slide'>\r\n        <AppScreen> \r\n        <FlatList\r\n            data = {data}\r\n            keyExtractor = { item => item.value.toString()}\r\n            renderItem = {({item}) =>\r\n                <AppListItem \r\n                  onPress={() => {\r\n                    setModalVisible(false);\r\n                    onSelectedItem(item);\r\n                  }} icon={item.icon} backgroundColor={AppColours.secondaryColour} title={item.label}/>}\r\n            />   \r\n            <AppButton title=\"Close\" onPress={() => setModalVisible(false)}></AppButton>\r\n        </AppScreen>\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flexDirection: 'row',\r\n        borderRadius: 20,\r\n        padding: 5,\r\n        width: '80%',\r\n        marginTop: 5,\r\n        backgroundColor: '#D3D3D3',\r\n    },\r\n    textInput:{\r\n        flex:1,\r\n        width: '100%',\r\n        marginLeft: 5,\r\n        fontSize:20,\r\n        fontFamily: Platform.OS === 'android' ? 'monospace' : 'Avenir-Oblique'\r\n    },\r\n    text:{\r\n\r\n    }\r\n\r\n})\r\nexport default AppPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}