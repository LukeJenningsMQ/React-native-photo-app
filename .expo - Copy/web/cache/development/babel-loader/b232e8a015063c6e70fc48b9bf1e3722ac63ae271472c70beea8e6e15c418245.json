{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar DataManager = function () {\n  function DataManager() {\n    var _this = this;\n    _classCallCheck(this, DataManager);\n    this.initalMemories = [];\n    this.users = [{\n      id: 1,\n      name: 'Luke Jennings',\n      email: 'ltj@g.com',\n      password: 'noise'\n    }, {\n      id: 2,\n      name: 'Megan Judge',\n      email: 'MegJudge@gmail.com',\n      password: 'cats1'\n    }];\n    this.userID = '';\n    this.handleDelete = function (Memory) {\n      _this.initalMemories = _this.initalMemories.filter(function (item) {\n        return item.id !== Memory.id;\n      });\n    };\n  }\n  _createClass(DataManager, [{\n    key: \"getUserID\",\n    value: function getUserID() {\n      return this.userID;\n    }\n  }, {\n    key: \"setUserID\",\n    value: function setUserID(id) {\n      this.userID = id;\n    }\n  }, {\n    key: \"getMemoryID\",\n    value: function getMemoryID(id) {\n      return this.initalMemories.filter(function (item) {\n        return item.userid === id;\n      });\n    }\n  }, {\n    key: \"getAllUsers\",\n    value: function getAllUsers() {\n      return this.users.filter(function (item) {\n        return item.id > 0;\n      });\n    }\n  }, {\n    key: \"getMemoryCat\",\n    value: function getMemoryCat(id, selectedCollect) {\n      return this.initalMemories.filter(function (item) {\n        return item.userid === id && item.collection === selectedCollect;\n      });\n    }\n  }, {\n    key: \"addMemory\",\n    value: function addMemory(memory) {\n      this.initalMemories.push(memory);\n      console.log(this.initalMemories);\n    }\n  }, {\n    key: \"addUser\",\n    value: function addUser(user) {\n      this.users.push(user);\n      console.log(this.users);\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (DataManager.myInstance == null) {\n        DataManager.myInstance = new DataManager();\n      }\n      return this.myInstance;\n    }\n  }]);\n  return DataManager;\n}();\nDataManager.myInstance = null;\nexport { DataManager as default };","map":{"version":3,"names":["DataManager","_this","_classCallCheck","initalMemories","users","id","name","email","password","userID","handleDelete","Memory","filter","item","_createClass","key","value","getUserID","setUserID","getMemoryID","userid","getAllUsers","getMemoryCat","selectedCollect","collection","addMemory","memory","push","console","log","addUser","user","getInstance","myInstance","default"],"sources":["C:/Users/lukej/Desktop/Web2022/poo/AwesomeP/app/configs/DataManager.js"],"sourcesContent":["export default class DataManager{\r\n    static myInstance = null;\r\n    initalMemories = [\r\n    ]\r\n    users = [\r\n        {\r\n          id: 1,\r\n          name:'Luke Jennings',\r\n          email:'ltj@g.com',\r\n          password:'noise'\r\n      },\r\n      {\r\n        id: 2,\r\n        name:'Megan Judge',\r\n        email:'MegJudge@gmail.com',\r\n        password:'cats1'\r\n      }\r\n      ];\r\n\r\n    userID = '';\r\n    static getInstance(){\r\n        if(DataManager.myInstance==null){\r\n            DataManager.myInstance = new DataManager();\r\n        }\r\n        return this.myInstance;\r\n    }\r\n\r\n    getUserID(){\r\n        return this.userID\r\n    }\r\n    \r\n    setUserID(id){\r\n        this.userID = id;\r\n    }\r\n\r\n    getMemoryID(id){\r\n        return this.initalMemories.filter((item) => item.userid === id);\r\n    }\r\n\r\n    getAllUsers(){\r\n        return this.users.filter((item) => item.id > 0);\r\n    }\r\n\r\n    getMemoryCat(id, selectedCollect){\r\n        return this.initalMemories.filter((item) => item.userid === id && item.collection === selectedCollect);\r\n        \r\n    }\r\n\r\n    addMemory(memory){\r\n        this.initalMemories.push(memory);\r\n        console.log(this.initalMemories);\r\n    }\r\n    addUser(user){\r\n        this.users.push(user);\r\n        console.log(this.users);\r\n    }\r\n\r\n  handleDelete = (Memory) => {\r\n    this.initalMemories = this.initalMemories.filter(item => item.id !== Memory.id);\r\n  }\r\n}"],"mappings":";;IAAqBA,WAAW;EAAA,SAAAA,YAAA;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAF,WAAA;IAAA,KAE5BG,cAAc,GAAG,EAChB;IAAA,KACDC,KAAK,GAAG,CACJ;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAC,eAAe;MACpBC,KAAK,EAAC,WAAW;MACjBC,QAAQ,EAAC;IACb,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAC,oBAAoB;MAC1BC,QAAQ,EAAC;IACX,CAAC,CACA;IAAA,KAEHC,MAAM,GAAG,EAAE;IAAA,KAsCbC,YAAY,GAAG,UAACC,MAAM,EAAK;MACzBV,KAAI,CAACE,cAAc,GAAGF,KAAI,CAACE,cAAc,CAACS,MAAM,CAAC,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAACR,EAAE,KAAKM,MAAM,CAACN,EAAE;MAAA,EAAC;IACjF,CAAC;EAAA;EAAAS,YAAA,CAAAd,WAAA;IAAAe,GAAA;IAAAC,KAAA,EAhCC,SAAAC,UAAA,EAAW;MACP,OAAO,IAAI,CAACR,MAAM;IACtB;EAAC;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAE,UAAUb,EAAE,EAAC;MACT,IAAI,CAACI,MAAM,GAAGJ,EAAE;IACpB;EAAC;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAG,YAAYd,EAAE,EAAC;MACX,OAAO,IAAI,CAACF,cAAc,CAACS,MAAM,CAAC,UAACC,IAAI;QAAA,OAAKA,IAAI,CAACO,MAAM,KAAKf,EAAE;MAAA,EAAC;IACnE;EAAC;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAK,YAAA,EAAa;MACT,OAAO,IAAI,CAACjB,KAAK,CAACQ,MAAM,CAAC,UAACC,IAAI;QAAA,OAAKA,IAAI,CAACR,EAAE,GAAG,CAAC;MAAA,EAAC;IACnD;EAAC;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAM,aAAajB,EAAE,EAAEkB,eAAe,EAAC;MAC7B,OAAO,IAAI,CAACpB,cAAc,CAACS,MAAM,CAAC,UAACC,IAAI;QAAA,OAAKA,IAAI,CAACO,MAAM,KAAKf,EAAE,IAAIQ,IAAI,CAACW,UAAU,KAAKD,eAAe;MAAA,EAAC;IAE1G;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAS,UAAUC,MAAM,EAAC;MACb,IAAI,CAACvB,cAAc,CAACwB,IAAI,CAACD,MAAM,CAAC;MAChCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC1B,cAAc,CAAC;IACpC;EAAC;IAAAY,GAAA;IAAAC,KAAA,EACD,SAAAc,QAAQC,IAAI,EAAC;MACT,IAAI,CAAC3B,KAAK,CAACuB,IAAI,CAACI,IAAI,CAAC;MACrBH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,KAAK,CAAC;IAC3B;EAAC;IAAAW,GAAA;IAAAC,KAAA,EAnCD,SAAAgB,YAAA,EAAoB;MAChB,IAAGhC,WAAW,CAACiC,UAAU,IAAE,IAAI,EAAC;QAC5BjC,WAAW,CAACiC,UAAU,GAAG,IAAIjC,WAAW,EAAE;MAC9C;MACA,OAAO,IAAI,CAACiC,UAAU;IAC1B;EAAC;EAAA,OAAAjC,WAAA;AAAA;AAzBgBA,WAAW,CACrBiC,UAAU,GAAG,IAAI;AAAA,SADPjC,WAAW,IAAAkC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}